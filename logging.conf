# Logging Configuration File for Domain Management CLI
# 
# Environment Variables for Configuration:
# - LOG_LEVEL: DEBUG, INFO, WARNING, ERROR, CRITICAL (default: INFO)
# - LOG_FORMAT: console, json (default: console)
# - LOG_DIR: Directory for log files (default: logs)
# - LOG_SQL_QUERIES: Enable SQL query logging (default: false)
# - DISABLE_FILE_LOGGING: Disable file logging, console only (default: false)
#
# Example usage:
# export LOG_LEVEL=DEBUG
# export LOG_FORMAT=json
# export LOG_DIR=/var/log/domain-cli
# export LOG_SQL_QUERIES=true

[loggers]
keys=root,cli,db,api,audit

[handlers]
keys=consoleHandler,fileHandler,errorHandler

[formatters]
keys=consoleFormatter,fileFormatter,jsonFormatter

[logger_root]
level=INFO
handlers=consoleHandler,fileHandler,errorHandler

[logger_cli]
level=INFO
handlers=consoleHandler,fileHandler
qualname=cli
propagate=0

[logger_db]
level=INFO
handlers=consoleHandler,fileHandler
qualname=db
propagate=0

[logger_api]
level=INFO
handlers=consoleHandler,fileHandler
qualname=api
propagate=0

[logger_audit]
level=INFO
handlers=consoleHandler,fileHandler,errorHandler
qualname=audit
propagate=0

[handler_consoleHandler]
class=StreamHandler
level=INFO
formatter=consoleFormatter
args=(sys.stdout,)

[handler_fileHandler]
class=handlers.RotatingFileHandler
level=INFO
formatter=fileFormatter
args=('logs/app.log', 'a', 10485760, 5, 'utf-8')

[handler_errorHandler]
class=handlers.RotatingFileHandler
level=ERROR
formatter=fileFormatter
args=('logs/error.log', 'a', 10485760, 5, 'utf-8')

[formatter_consoleFormatter]
format=%(asctime)s - %(name)s - %(levelname)s - %(message)s
datefmt=%Y-%m-%d %H:%M:%S

[formatter_fileFormatter]
format=%(asctime)s - %(name)s - %(levelname)s - %(funcName)s:%(lineno)d - %(message)s
datefmt=%Y-%m-%d %H:%M:%S

[formatter_jsonFormatter]
format={"timestamp": "%(asctime)s", "logger": "%(name)s", "level": "%(levelname)s", "module": "%(module)s", "function": "%(funcName)s", "line": %(lineno)d, "message": "%(message)s"}
datefmt=%Y-%m-%dT%H:%M:%S